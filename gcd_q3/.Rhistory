data <- read.csv("~/Downloads/hw1_data.csv")
data
head(data)
size(data)
length(data)
nrow(data)
tail(data)
data[47]
data(47)
data[47,]
missing <- subset(data, is.na(data$Ozone))
missing
nrow(missing)
rowMeans(data, na.rm = TRUE)
colMeans(data, na.rm = TRUE)
data[data$Ozone > 31]
subset(data, data$Ozone > 31)
hot <- subset(data, data$Ozone > 31 & data$Temp > 90)
nrows(hot)
nrow(hot)
colMeans(hot, na.rm = TRUE)
data[data$Month == 6]
data[data$Month = 6]
data[data$Month <= 6]
data(data$Month <= 6)
data[which(data$Month=6)]
data[which(data$Month==6)]
data[which(data$Month==6.0)]
data[which(data$Month==6.0)]
data[which(data$Month==6.0),]
sixth <- data[which(data$Month==6.0),]
colMeans(sixth, na.rm = TRUE)
may <- data[which(data$Month==5.0),]
colMax <- function(data) sapply(data, max, na.rm = TRUE)
colMax(may)
may
data[47]
package.install('acs')
package.download('acs')
packages.download('acs')
packages.install('acs')
install.packages('acs')
Library(acs)
library(acs)
acsData = download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv", destfile="./w2data.csv", method="curl")
acsData
install.packages("RMySQL")
install.packages("sqldf")
acl <- read.csv("./w2data.csv")
acl
library(sqldf)
sqldf("select * from acs where AGEP < 50 and pwgtp1")
read.csv.sql("./w2data.csv", sql = "create table as as select * from file",
dbname = "sample_db", header = T, row.names = F, sep = ",")
read.csv.sql("./w2data.csv", sql = "create table as acs select * from file",
dbname = "w2db", header = T, row.names = F, sep = ",")
read.csv.sql("./w2data.csv", sql = "create table acs as select * from file",
dbname = "w2db", header = T, row.names = F, sep = ",")
sqldf("select * from acs where AGEP < 50 and pwgtp1")
sqldf("select * from acl where AGEP < 50 and pwgtp1")
View(acl)
View(acl)
View(acl)
View(acl)
acs = acl
View(acl)
head(acs)
sqldf("select pwgtp1 from acs where AGEP < 50")
con = url("http://biostat.jhsph.edu/~jleek/contact.html")
htmlCode = readLines(con)
close(con)
con = url("http://biostat.jhsph.edu/~jleek/contact.html")
read.table(con, skip=9, nrow=1)
nchar(read.table(con, skip=9, nrow=1))
r1 = read.table(con, skip=9, nrow=1)
con = url("http://biostat.jhsph.edu/~jleek/contact.html")
r1 = read.table(con, skip=9, nrow=1)
r1
nchar(r1)
r1 = read.table(con, skip=19, nrow=1)
con = url("http://biostat.jhsph.edu/~jleek/contact.html")
r1 = read.table(con, skip=19, nrow=1)
r1
con = url("http://biostat.jhsph.edu/~jleek/contact.html")
r1 = read.table(con, skip=29, nrow=1)
r1
con = url("http://biostat.jhsph.edu/~jleek/contact.html")
r1 = read.table(con, skip=99, nrow=1)
r1
nchar(r1)
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for", destfile="./w2data.for", method="curl")
getdate <- read.csv("./w2data.for")
getdate
head(getdate)
sum(getdate$1)
getdate[1]
getdate[[1]
getdate[[1]]
getdate[[1]]
getdate[,1]
head(getdate)
getdata <- read.fwf("./w2data.for", header=TRUE, skip=1)
getdata <- read.fwf("./w2data.for", header=TRUE, skip=1, widths=c(9, 8,8,4,3,4,3))
getdata <- read.fwf("./w2data.for", skip=2, widths=c(9, 8,8,4,3,4,3))
getdata
getdata <- read.fwf("./w2data.for", skip=2, widths=c(10, 8,8,4,3,4,3))
getdata
getdata <- read.fwf("./w2data.for", skip=2, widths=c(9,5, 8,5,8,5,4,5,3,5,4,5,3))
getdata
getdata <- read.fwf("./w2data.for", skip=2, widths=c(10,5, 8,5,8,5,4,5,3,5,4,5,3))
getdata
getdata[[9]]
getdata
getdata <- read.fwf("./w2data.for", skip=2, widths=c(10,5, 4,1,4,5,8,5,4,5,3,5,4,5,3))
getdata
getdata <- read.fwf("./w2data.for", skip=2, widths=c(10,5, 4,1,3,5,8,5,4,5,3,5,4,5,3))
getdata
getdata[1]
getdata
getdata[13]
getdata[12]
sum(getdata[12])
getdata
getdata[7]
getdata
getdata[4]
getdata
getdata[1-100]
getdata[1-10]
getdata
head(getdata)
getdata <- read.fwf("./w2data.for", skip=2, widths=c(10,5, 4,1,3,5,4,1,3,5,4,5,3,5,4,5,3))
head(getdata)
getdata$V7
sum(getdata$V7)
as.numeric(getdata$V7)
getdata$V7
as.factor(getdata$V7)
sum(as.factor(getdata$V7))
sum(as.factor(as.character(getdata$V7))
sum(as.factor(as.character(getdata$V7)))
sum(as.factor(as.character(getdata$V7)))
vals <- as.factor(getdata$V7)
vals
complete.cases(vals)
vals[complete.cases(vals)]
vals2 <- [complete.cases(getdata$V7)]
vals2 <- getdata$V7[complete.cases(getdata$V7)]
vals2
vals <- as.factor(vals2)
sum(vals)
vals[,sapply(vals, is.numeric)]
vals[sapply(vals, is.numeric)]
foo <- vals[sapply(vals, is.numeric)]
sapply(vals, is.numeric)
vals2
sapply(vals2, is.numeric)
vals <- as.factor(getdata$V7)
vals
sapply(vals, as.factor)
vals <- sapply(vals, as.factor)
vals
sum(vals)
sum(vals,na.rm=TRUE)
mean(vals, na.rm=TRUE)
vals
getdata
head(getdata)
vals
head(vals)
vals[0]
vals[1]
vals[2]
vals[3]
vals[-1]
vals[1]
vals[-1]
vals[-1]
vals
vals[1]
vals[1-2]
vals[1:2]
rm <- vals[1:2]
setdiff(vals, rm)
valsf <- setdiff(vals, rm)
sum(valsf)
valsf <- as.factor(valsf)
valsf
sum(valsf)
as.numeric(valsf)
as.numeric(valsf)[1]
valsf
as.character(valsf)
as.numeric(as.character(valsf))
valsf <- as.numeric(as.character(valsf))
sum(valsf)
getdata <- read.fwf("./w2data.for", skip=2, widths=c(10,5,4,1,3,5,4,1,3,5,4,1,3,5,4,5,3))
getdata <- read.fwf("./w2data.for", skip=2, widths=c(10,5,4,1,3,5,4,1,3,5,4,1,3,5,4,5,3), skip=4)
getdata <- read.fwf("./w2data.for", skip=4, widths=c(10,5,4,1,3,5,4,1,3,5,4,1,3,5,4,5,3))
getdata
getdata[,7]
sum(getdata[,7])
setwd("~/Desktop/gcd_q3")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv", destfile="./microdata.csv")
download.file("http://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv", destfile="./microdata.csv")
data <- read.csv("./microdata.csv", headers=TRUE)
data <- read.csv("./microdata.csv", header=TRUE)
data
head(data)
data$ags
data$AGS
data[data$AGS = 6]
data[data$AGS == 6]
data[AGS == 6]
data[data$AGS == 6]
data$AGS
data[which(data$AGS == 6)]
data[which(data$AGS-6)]
data[which(data$AGS=6)]
data[which(data$AGS==6)]
data[which(AGS==6)]
class(data)
subset(data, AGS==6)
subset(data, AGS==6 && ACR==3)
subset(data, AGS==6, ACR==3)
q1 <- subset(data, AGS==6, ACR==3)
q1
which(q1)
data[data$AGS==6,]
data[data$AGS==6 && data$ACR==3,]
data[,data$AGS==6 && data$ACR==3]
q1 <- data[,data$AGS==6 && data$ACR==3]
which(q1)
q1 <- data[data$AGS==6 && data$ACR==3,]
which q1
which(q1)
data[data$AGS==6,]
data[data$AGS==6 && data$ACR==3,]
data[data$ACR==3,]
data[data$ACR==3,1]
data[data$ACR==3,0]
data[data$ACR==3,2]
data[data$ACR==3,1]
head(data[data$ACR==3,],1)
head(data[data$ACR==3,],3)
nrow(data[data$ACR==3,])
nrow(data[data$ACR==3 & data$AGS==6,])
agricultureLogical <- data[data$ACR==3 & data$AGS==6,]
which(agricultureLogical)
agricultureLogical
class(agricultureLogical)
head(agricultureLogical, 3)
which(data$ACR==3 & data$AGS==6)
nrow(which(data$ACR==3 & data$AGS==6), 3)
ncol(which(data$ACR==3 & data$AGS==6), 3)
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg", destfile="./image.jpg")
download.file("http://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg", destfile="./image.jpg")
install.packages("jpeg")
library(jpeg)
?readJPEG
image <- readJPEG("./image.jpg")
image <- readJPEG("./image.jpg", native=TRUE)
image[30,]
image[30]
image[80]
image[,80]
quantile(image[30])
quantile(image)
quantile(image, probs = seq(0,0.3,0.8,1))
quantile(image, probs = seq(0.3,0.8,1))
quantile(image, probs = seq(0.3,0.8)
)
quantile(image, probs = c(0.3,0.8))
quantile(image, probs=c(0.3,0.8))
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv", destfile = "./gdp.csv", method=CURL)
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv", destfile = "./gdp.csv", method="CURL)
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv", destfile = "./gdp.csv", method="CURL")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv", destfile = "./gdp.csv", method="CURL")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv", destfile = "./gdp.csv", method="curl")
q2 <- read.csv("./gdp.csv", header=TRUE)
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv", destfile = "./edu.csv", method="curl")
q2b <- read.csv("./edu.csv", header=TRUE)
q2$X
r <- merge(q2,q2b,by.x="X",by.y="CountryCode")
r
r[13,]
r$Gross.domestic.product.2012
order(r$Gross.domestic.product.2012)
r[order(r$Gross.domestic.product.2012),]
r[order(Gross.domestic.product.2012),]
r[order(-r$Gross.domestic.product.2012),]
class(R)
class(r)
order(r$Gross.domestic.product.2012)
ord <- order(r$Gross.domestic.product.2012)
ord <- order(r$Gross.domestic.product.2012, decreasing=TRUE)
r[ord,]
r[ord,13]
r[ord,][13]
r[ord,][,13]
r[ord,]
r1 <- r[ord,]
nrow(r1,13)
r1$X
r1$X[13]
r1$X[13,]
r1$X[,13]
r1$X[13]
r$Gross.domestic.product.2012
r$Gross.domestic.product.2012$Ranking
q1 <- read.csv("./gdp.csv", header=TRUE, skip=3)
q1$Ranking
q1$X
q2a <- read.csv("./gdp.csv", header=TRUE, skip=3)
q2b
r <- merge(q2a,q2b,by.x="X",by.y="CountryCode")
r
r[order(r$Ranking, decreasing=TRUE),]
r1 <- r[order(r$Ranking, decreasing=TRUE),]
r1$X
r1$X[0]
r1$X[0,]
r1[1]
r1[2]
r1 <- r[,order(r$Ranking, decreasing=TRUE)]
ord = order(r$Ranking, decreasing=TRUE)
r[ord,]
r$X[ord,]
r$X[ord]
r1
r1[13]
r1[,13]
r1[,13]
nrows(r1)
nrow(r1)
nrow(r)
q1a = read.csv("~/Downloads/getdata-data-GDP.csv", header=TRUE)
r <- merge(q1a,q2b,by.x="CC",by.y="CountryCode")
nrow(r)
?merge
r <- merge(q1a,q2b,by.x="CC",by.y="CountryCode", incomparables=NA)
nrow(r)
nrow(na.omit(r))
r
q1a$CC
intersect(q1a$CC,q2b$CountryCode)
nrow(intersect(q1a$CC,q2b$CountryCode))
ncol(intersect(q1a$CC,q2b$CountryCode))
i <- intersect(q1a$CC,q2b$CountryCode)
r
gdp <- read.csv("./gdp.csv", headers=TRUE, skip=3)
gdp <- read.csv("./gdp.csv", header=TRUE, skip=3)
edu <- read.csv("./edu.csv", header=TRUE)
merged <- merge(gdp, edu, by.x="X", by.y="CountryCode")
gdp[gdp$Ranking == 0,]
gdp[gdp$Ranking == NA,]
gdp[gdp$Ranking==NA,]
gdp[gdp$Ranking!=NA,]
gdp$Ranking
na.omit(gdp)
gdp[!is.na(gdp$Ranking),]
nrow(gdp[!is.na(gdp$Ranking),])
gdp$Ranking[42]
gdp$Ranking[40]
gdp$Ranking[1]
header(gdp)
head(gdp)
gdpclean <- filter(gdp, gdp$X!="")
nrow(gdpclean)
nrow(gdp)
gdp$X
gdp <- read.csv("./gdp.csv")
gdp$X
gdpclean <- filter(gdp, gdp$X!="")
nrow(gdpclean)
file.download("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv", destfile="./gdp.csv", method="curl")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv", destfile="./gdp.csv", method="curl")
gdp <- read.csv("./gdp.csv")
gdpclean <- filter(gdp, gdp$X!="")
na.omit(gdp)
gdpclean <- filter(gdp, gdp$X!="" & gdp$Gross.domestic.product.2012!="")
nrow(gdpclean)
gdp <- read.csv("./gdp.csv", header=TRUE, skip=3, na.omit=TRUE)
gdp <- read.csv("./gdp.csv", header=FALSE, skip=3, )
gdp$V1
gdpclean <- filter(gdp, gdp$V1!="")
nrow(gdpclean)
gdpclean
head(gdpclean)
gdp
head(gdp)
gdp[gdp$V1!=""]
gdp[gdp$V1!="",]
gdpclean <- gdp[gdp$V1!="",]
merged <- merge(gdp, edu, by.x="V1", by.y="CountryCode")
nrow(merged)
merged <- merge(gdpclean, edu, by.x="V1", by.y="CountryCode")
nrow(merged)
edu
edu$CountryCode
educlean = edu[edu$CountryCode!="",]
View(educlean)
head(merged)
na.omit(gdpclean)
?merge
merged <- merge(gdpclean, edu, by.x="V1", by.y="CountryCode", all=FALSE)
merged <- merge(gdpclean, edu, by.x="V1", by.y="CountryCode", all.x=TRUE)
head(edu)
head(gdpclean)
gdpclean[gdpclean$V1=="",]
gdpclean[gdpclean$V2=="",]
gdpclean[gdpclean$V2!="",]
nrow(gdpclean[gdpclean$V2!="",])
gdpclean <- gdpclean[gdpclean$V2!="",]
merged <- merge(gdpclean, edu, by.x="V1", by.y="CountryCode")
merged[,13]
merged[13]
merged[13,]
merged[13]$Region
merged
merged <- merge(gdpclean, edu, by.x="V1", by.y="CountryCode", all.x=TRUE, all.y=FALSE)
merged
head(merged)
head(merged, 13)
merged <- merge(gdpclean, edu, by.x="V1", by.y="CountryCode")\
merged <- merge(gdpclean, edu, by.x="V1", by.y="CountryCode")
merged$V2
sorted <- merged[order(merged$V2, decreasing=TRUE),]
sorted[13]
sorted[,13]
sorted[13,]
head(sorted)
tail(sorted)
head(sorted)
head(sorted,13)
order(merged$V2, decreasing=TRUE)
class(merged$V2)
numeric(merged$V2)
as.character(merged$V2)
as.numeric(as.character(merged$V2))
order(as.numeric(as.character(merged$V2)), decreasing=TRUE)
sorted <- merged[order(as.numeric(as.character(merged$V2)), decreasing=TRUE),]
sorted[13,]
merged$Income.Group
merged[merged$Income.Group == "High income: OECD",]
highIncome <- merged[merged$Income.Group == "High income: OECD",]
highIncomeOECD <- merged[merged$Income.Group == "High income: OECD",]
highIncomenonOECD <- merged[merged$Income.Group == "High income: nonOECD",]
highIncomeOECD$V2
as.numeric(as.character(highIncomeOECD$V2))
?average
?mean
mean(as.numeric(as.character(highIncomeOECD$V2)))
mean(as.numeric(as.character(highIncomenonOECD$V2)))
quantile(merged$V2, probs=c(0.2,0.4,0.6,0.8,1))
quantile(as.numeric(as.character(merged$V2)), probs=c(0.2,0.4,0.6,0.8,1))
lowermiddleincome <- merged[merged$Income.Group == "Lower middle income",]
quantile(lowermiddleincome$V2, probs=c(0.2,0.4,0.6,0.8,1))
quantile(as.numeric(as.character(lowermiddleincome$V2)), probs=c(0.2,0.4,0.6,0.8,1))
sorted
sorted$V2
top38 <- head(sorted, 38)
top38[top38$Income.Group == "Lower middle income",]
nrow(top38[top38$Income.Group == "Lower middle income",])
nrow(merged[merged$Income.Group == "Lower middle income",],38)
merged[merged$Income.Group == "Lower middle income",]
lowermiddleincome <- merged[merged$Income.Group == "Lower middle income",]
lowermiddleincome <- sorted[sorted$Income.Group == "Lower middle income",]
lowermiddleincome$V2
lowermiddleincome <- merged[merged$Income.Group == "Lower middle income",]
top38[top38$Income.Group == "Lower middle income",]
nrow(top38[top38$Income.Group == "Lower middle income",])
quantiles <- quantile(as.numeric(as.character(merged$V2)), probs=c(0.2,0.4,0.6,0.8,1))
quantiles
quantiles <- quantile(as.numeric(as.character(merged$V2)), probs=c(0.2,0.4,0.6,0.8,1), names=TRUE)
quantiles
quantiles <- quantile(as.numeric(as.character(merged$V2)), probs=c(0.2,0.4,0.6,0.8,1))
final <- cut(merged, quantiles)
final <- cut(as.numeric(as.character(merged)), quantiles)
final <- cut(as.numeric(as.character(merged$V2)), quantiles)
final
final <- cut(merged$V, quantiles)
final <- cut(merged, quantiles)
final <- cut(as.numeric(as.character(merged$V2)), quantiles)
split(merged, final)
finalsplit <- split(merged, final)
head(finalsplit)
ncol(finalsplit)
nrow(finalsplit)
finalsplit$(76.2,114]
finalsplit$(76.2,114]
finalsplit$\(76.2,114]
finalsplit$(76.2,114])
finalsplit$"(76.2,114]"
top38
top38$V2
f <- finalsplit$"(76.2,114]"
f[as.numeric(as.character(f$V2)) >= 153]
f <- finalsplit$"(114,152]"
f[as.numeric(as.character(f$V2)) >= 153]
f$V2
f <- finalsplit$"(76.2,114]"
f$V2
f <- finalsplit$"(114,152]"
f$V2
f$V2 > 153
as.numeric(as.character(f$V2)) > 153
merged[as.numeric(as.character(merged$V2)) <= 38]
merged[as.numeric(as.character(merged$V2)) <= 38,]
merged[as.numeric(as.character(merged$V2)) <= 38 & merged$Income.Group=="Lower middle income",]
nrow(merged[as.numeric(as.character(merged$V2)) <= 38 & merged$Income.Group=="Lower middle income",])
