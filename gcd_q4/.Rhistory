fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
file <- download.file(fileUrl, destfile="./Idaho.csv", method="curl")
data = read.csv(file)
data = read.csv(file=file)
file
data = read.csv(file="Idaho.csv")
data
data[names(data)=="VAL"]
names(data)
data["VAL"]
count(data, "VAL")
library(plyr)
aggregate
data.frame
data["VAL"]
length(which(data["VAL"] == 24))
xlsUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx"
download.file(xlsUrl, destfile="./NGAP.xlsx", method="curl")
library(xlsx)
install.packages("xlsx")
library(xlsx)
ngapData <- read.xlsx("./NGAP.xlsx", sheetIndex=1, header=TRUE)
ngRowIndex <- 18:23
ngColIndex <- 7:15
dat <- read.xlsx("./NGAP.xlsx", sheetIndex=1,colIndex=ngColIndex,rowIndex = ngRowIndex, header=TRUE)
dat
sum(dat$Zip*dat$Ext,na.rm=T)
library(XML)
install.packages("XML")
library(XML)
xmlUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
doc <- xmlTreeParse(xmlUrl, useInternal=TRUE)
doc <- xmlTreeParse("~/restuarants.xml", useInternal=TRUE)
doc <- xmlTreeParse("~/Desktop/restaurants.xml", useInternal=TRUE)
rootNode <- xmlRoot(doc)
rootNode
xml["name"]
xpathSApply(rootNode, "//zipcode", xmlValue)
xmlValue
zipcodes <- xpathSApply(rootNode, "//zipcode", xmlValue)
r["21231"]
zipcodes["21231"]
zipcodes
unique(zipcodes)
zipcodes == "21287"
length(zipcodes == "21287")
length(zipcodes == "21231")
zipcodes[21231]
zipcodes["21231"]
zipcodes
where(zipcodes == "21231")
zipcodes[zipcodes=="21231"]
count(zipcodes[zipcodes=="21231"])
length(zipcodes[zipcodes=="21231"])
q5Url <-"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv"
q5Data = download.file(q5Url, destfile="./q5data.csv", method="curl")
q5vals <- fread(q5Data, sep=",")
q5vals <- data.fread(q5Data, sep=",")
require(data.table)
Library(data.table)
library(data.table)
library(data)
install.packages("data.table")
library(data.table)
q5vals <- data.fread(q5Data, sep=",")
q5vals <- data.table(q5Data, sep=",")
q5vals
q5vals <- data.table(q5Data)
q5vals
q5vals <- fread(q5Data, sep=",")
q5vals <- fread("./q5data.csv", sep=",")
q5vals
DT <- fread("./q5data.csv", sep=",")
DT[,mean(pwgtp15),by=SEX]
DT[,mean(pwgtp15)]
DT["pwgtp15"]
DT[DT=="pwgtp15"]
DT
x <- 4L
class(x)
x <- c(4, "a", TRUE)
class(x)
x <- c(1,3, 5)
y <- c(3, 2, 10)
rbind(x, y)
rbind(x, y, y)
rbind(x, y)
z <- rbind(x, y)
class(z)
x <- list(2, "a", "b", TRUE)
x[0]
x[1]
"hi"
c[1]
x[1]
x[[1]
]
x
d <- list(2, "a", "b", TRUE)
d[[1]]
[1]
d
class(d[[1]])
x <- 1:4
x
y <- 2
x + y
class(x + y)
x <- c(3, 5, 1, 10, 12, 6)
x[x %in% 1:5] <- 0
x
data <- read.csv("~/Downloads/hw1_data.csv")
data
head(data)
size(data)
length(data)
nrow(data)
tail(data)
data[47]
data(47)
data[47,]
missing <- subset(data, is.na(data$Ozone))
missing
nrow(missing)
rowMeans(data, na.rm = TRUE)
colMeans(data, na.rm = TRUE)
data[data$Ozone > 31]
subset(data, data$Ozone > 31)
hot <- subset(data, data$Ozone > 31 & data$Temp > 90)
nrows(hot)
nrow(hot)
colMeans(hot, na.rm = TRUE)
data[data$Month == 6]
data[data$Month = 6]
data[data$Month <= 6]
data(data$Month <= 6)
data[which(data$Month=6)]
data[which(data$Month==6)]
data[which(data$Month==6.0)]
data[which(data$Month==6.0)]
data[which(data$Month==6.0),]
sixth <- data[which(data$Month==6.0),]
colMeans(sixth, na.rm = TRUE)
may <- data[which(data$Month==5.0),]
colMax <- function(data) sapply(data, max, na.rm = TRUE)
colMax(may)
may
data[47]
package.install('acs')
package.download('acs')
packages.download('acs')
packages.install('acs')
install.packages('acs')
Library(acs)
library(acs)
acsData = download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv", destfile="./w2data.csv", method="curl")
acsData
install.packages("RMySQL")
install.packages("sqldf")
acl <- read.csv("./w2data.csv")
acl
library(sqldf)
sqldf("select * from acs where AGEP < 50 and pwgtp1")
read.csv.sql("./w2data.csv", sql = "create table as as select * from file",
dbname = "sample_db", header = T, row.names = F, sep = ",")
read.csv.sql("./w2data.csv", sql = "create table as acs select * from file",
dbname = "w2db", header = T, row.names = F, sep = ",")
read.csv.sql("./w2data.csv", sql = "create table acs as select * from file",
dbname = "w2db", header = T, row.names = F, sep = ",")
sqldf("select * from acs where AGEP < 50 and pwgtp1")
sqldf("select * from acl where AGEP < 50 and pwgtp1")
View(acl)
View(acl)
View(acl)
View(acl)
acs = acl
View(acl)
head(acs)
sqldf("select pwgtp1 from acs where AGEP < 50")
con = url("http://biostat.jhsph.edu/~jleek/contact.html")
htmlCode = readLines(con)
close(con)
con = url("http://biostat.jhsph.edu/~jleek/contact.html")
read.table(con, skip=9, nrow=1)
nchar(read.table(con, skip=9, nrow=1))
r1 = read.table(con, skip=9, nrow=1)
con = url("http://biostat.jhsph.edu/~jleek/contact.html")
r1 = read.table(con, skip=9, nrow=1)
r1
nchar(r1)
r1 = read.table(con, skip=19, nrow=1)
con = url("http://biostat.jhsph.edu/~jleek/contact.html")
r1 = read.table(con, skip=19, nrow=1)
r1
con = url("http://biostat.jhsph.edu/~jleek/contact.html")
r1 = read.table(con, skip=29, nrow=1)
r1
con = url("http://biostat.jhsph.edu/~jleek/contact.html")
r1 = read.table(con, skip=99, nrow=1)
r1
nchar(r1)
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for", destfile="./w2data.for", method="curl")
getdate <- read.csv("./w2data.for")
getdate
head(getdate)
sum(getdate$1)
getdate[1]
getdate[[1]
getdate[[1]]
getdate[[1]]
getdate[,1]
head(getdate)
getdata <- read.fwf("./w2data.for", header=TRUE, skip=1)
getdata <- read.fwf("./w2data.for", header=TRUE, skip=1, widths=c(9, 8,8,4,3,4,3))
getdata <- read.fwf("./w2data.for", skip=2, widths=c(9, 8,8,4,3,4,3))
getdata
getdata <- read.fwf("./w2data.for", skip=2, widths=c(10, 8,8,4,3,4,3))
getdata
getdata <- read.fwf("./w2data.for", skip=2, widths=c(9,5, 8,5,8,5,4,5,3,5,4,5,3))
getdata
getdata <- read.fwf("./w2data.for", skip=2, widths=c(10,5, 8,5,8,5,4,5,3,5,4,5,3))
getdata
getdata[[9]]
getdata
getdata <- read.fwf("./w2data.for", skip=2, widths=c(10,5, 4,1,4,5,8,5,4,5,3,5,4,5,3))
getdata
getdata <- read.fwf("./w2data.for", skip=2, widths=c(10,5, 4,1,3,5,8,5,4,5,3,5,4,5,3))
getdata
getdata[1]
getdata
getdata[13]
getdata[12]
sum(getdata[12])
getdata
getdata[7]
getdata
getdata[4]
getdata
getdata[1-100]
getdata[1-10]
getdata
head(getdata)
getdata <- read.fwf("./w2data.for", skip=2, widths=c(10,5, 4,1,3,5,4,1,3,5,4,5,3,5,4,5,3))
head(getdata)
getdata$V7
sum(getdata$V7)
as.numeric(getdata$V7)
getdata$V7
as.factor(getdata$V7)
sum(as.factor(getdata$V7))
sum(as.factor(as.character(getdata$V7))
sum(as.factor(as.character(getdata$V7)))
sum(as.factor(as.character(getdata$V7)))
vals <- as.factor(getdata$V7)
vals
complete.cases(vals)
vals[complete.cases(vals)]
vals2 <- [complete.cases(getdata$V7)]
vals2 <- getdata$V7[complete.cases(getdata$V7)]
vals2
vals <- as.factor(vals2)
sum(vals)
vals[,sapply(vals, is.numeric)]
vals[sapply(vals, is.numeric)]
foo <- vals[sapply(vals, is.numeric)]
sapply(vals, is.numeric)
vals2
sapply(vals2, is.numeric)
vals <- as.factor(getdata$V7)
vals
sapply(vals, as.factor)
vals <- sapply(vals, as.factor)
vals
sum(vals)
sum(vals,na.rm=TRUE)
mean(vals, na.rm=TRUE)
vals
getdata
head(getdata)
vals
head(vals)
vals[0]
vals[1]
vals[2]
vals[3]
vals[-1]
vals[1]
vals[-1]
vals[-1]
vals
vals[1]
vals[1-2]
vals[1:2]
rm <- vals[1:2]
setdiff(vals, rm)
valsf <- setdiff(vals, rm)
sum(valsf)
valsf <- as.factor(valsf)
valsf
sum(valsf)
as.numeric(valsf)
as.numeric(valsf)[1]
valsf
as.character(valsf)
as.numeric(as.character(valsf))
valsf <- as.numeric(as.character(valsf))
sum(valsf)
getdata <- read.fwf("./w2data.for", skip=2, widths=c(10,5,4,1,3,5,4,1,3,5,4,1,3,5,4,5,3))
getdata <- read.fwf("./w2data.for", skip=2, widths=c(10,5,4,1,3,5,4,1,3,5,4,1,3,5,4,5,3), skip=4)
getdata <- read.fwf("./w2data.for", skip=4, widths=c(10,5,4,1,3,5,4,1,3,5,4,1,3,5,4,5,3))
getdata
getdata[,7]
sum(getdata[,7])
setwd("~/Projects/coursera/gcd_q4")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv", method="curl")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv", "./hid.csv", method="curl")
hid <- read.csv("./hid.csv")
?strsplit
names(hid)
splitNames <- strsplit(names(hid),
"wgtp")
splitNames
dim(splitNames)
splitNames[1]
splitNames[123]
splitNames[[123]]
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv", "./gdp.csv", method="curl")
gdp <- read.csv("./gdp.csv")
gdp <- read.csv("./gdp.csv", skip=6, headers=F)
gdp <- read.csv("./gdp.csv", skip=6, header=F)
head(gdp)
head(gdp$V5)
sub(",", "", gdp$V5)
?sub
gsub(",", "", gdp$V5)
as.numeric(gsub(",", "", gdp$V5))
?as.numeric
?skip.na
na.omit(gsub(",", "", gdp$V5))
na.omit(as.numeric(gsub(",", "", gdp$V5)))
mean(na.omit(as.numeric(gsub(",", "", gdp$V5))))
sub(",", "", gdp$V5)
gsub(",", "", gdp$V5)
gsub(", ", "", gdp$V5)
gsub("(,| )", "", gdp$V5)
gsub("(,| |\.)", "", gdp$V5)
gsub("(,| |.)", "", gdp$V5)
gsub("(,| |..)", "", gdp$V5)
gsub("(,| _", "", gdp$V5)
gsub("(,| )", "", gdp$V5)
gsub("(,| )", "", gdp$V5)
as.numeric(as.character(gsub(",", "", gdp$V5))
)
mean(as.numeric(as.character(gsub(",", "", gdp$V5))))
mean(na.omit(as.numeric(as.character(gsub(",", "", gdp$V5)))))
na.omit(as.numeric(as.character(gsub(",", "", gdp$V5))))
millions <- na.omit(as.numeric(as.character(gsub(",", "", gdp$V5))))
as.character(gsub(",", "", gdp$V5))
as.numeric(as.character(gsub(",", "", gdp$V5)))
?mean
mean(as.numeric(as.character(gsub(",", "", gdp$V5))))
mean(as.numeric(as.character(gsub(",", "", gdp$V5))), na.rm=T)
gdp$V5
gdp <- read.csv("./gdp.csv", skip=5, headers=F)
gdp <- read.csv("./gdp.csv", skip=5, header=F)
mean(as.numeric(as.character(gsub(",", "", gdp$V5))), na.rm=T)
gdp$V5
gsub(",", "", gdp$V5)
as.numeric(as.character(gsub(",", "", gdp$V5)))
millions <- na.omit(as.numeric(as.character(gsub(",", "", gdp$V5))))
millions
mean(millions)
millions
as.numeric(as.character(gsub(",", "", gdp$V5)))
gdp$V1
gdp$gdp <- as.numeric(as.character(gsub(",", "", gdp$V5)))
gdp$V1
gdp$V1 < "WBG"
gdp$V1 == "WBG"
which(gdp$V1 == "WBG")
gdp$V1[1:which(gdp$V1 == "WBG"),]
gdp$V1[1:which(gdp$V1 == "WBG")]
gdp$gdp[1:which(gdp$V1 == "WBG")]
mean(gdp$gdp[1:which(gdp$V1 == "WBG")], na.omit=T)
mean(na.omit(gdp$gdp[1:which(gdp$V1 == "WBG")]))
gdp$V4
na.omit(as.character(gdp$V4))
CountryName <- na.omit(as.character(gdp$V4))
CountryName == ""
CountryName != ""
CoountryName = CountryName[CountryName != ""]
CoountryName
gsub("^ ", "", CoountryName)
gsub("^ +", "", CoountryName)
CountryName <- gsub("^ +", "", CoountryName)
grep("^United", CountryName)
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv", "fgdp.csv", method="curl")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv", "countrystats.csv", method="curl")
countryStats <- read.csv("./countrystats.csv")
?merge
merged <- merge(gdp, countryStats, by.x="V1", by.y="CountryCode")
merged
countryStats$Special.Notes
?grep
grep("Fiscal year end", countryStats$Special.Notes)
countryStats$Special.Notes[grep("Fiscal year end", countryStats$Special.Notes),]
countryStats$Special.Notes[grep("Fiscal year end", countryStats$Special.Notes)]
countryStats$Special.Notes[grep("Fiscal year end: June", countryStats$Special.Notes)]
nrow(countryStats$Special.Notes[grep("Fiscal year end: June", countryStats$Special.Notes)])
length(row(countryStats$Special.Notes[grep("Fiscal year end: June", countryStats$Special.Notes)])
)
?size
?length
length(countryStats$Special.Notes[grep("Fiscal year end: June", countryStats$Special.Notes)])
library(quantmod)
install.packages("quantmod")
library(quantmod)
amzn = getSymbols("AMZN",auto.assign=FALSE)
sampleTimes = index(amzn)
sampleTimes
grep("^2012", sampleTimes)
sampleTimes2012 <- sampleTimes[grep("^2012", sampleTimes)]
sampleTimes2012
?strptime
?apply
?lapply
lapply(sampleTimes2012, strptime, "%Y-%m-%d")
sampleTimes2012$date <- lapply(sampleTimes2012, strptime, "%Y-%m-%d")
sampleTimes2012 <- lapply(sampleTimes[grep("^2012", sampleTimes)], strptime, "%Y-%m-%d")
sampleTimes2012[1]
weekdays(sampleTimes2012[1])
weekday(sampleTimes2012[1])
weekdays <- weekdays(as.Date(sampleTimes[grep("^2012", sampleTimes)]))
weekdays
weekdays == "Monday"
which(weekdays == "Monday")
length(which(weekdays == "Monday"))
